@startuml Soundgood Music School
hide circle
' 'need to allow mixing to accomplish something with mixed shapes
' allow_mixing

skinparam linetype ortho
' skinparam package {
'     BackgroundColor LightYellow
' }
top to bottom direction
' left to right direction

' skinparam ClassAttributeIconSize 0
' class classtest{}

' ACTORS
entity "person" {
' entity "contact_info" {
    ' * id : UNIQUE <<PK>>
    --
    first_name : NOT NULL
    middle_name  [0..1]
    last_name : NOT NULL
    email : NOT NULL
    phone_number : NOT NULL
}

entity "address" {
    --
    street : NOT NULL
    zip : NOT NULL
    city : NOT NULL
}

entity "student" {
    * id : UNIQUE <<PK>>
    --
    ' * person_id : UNIQUE     <<FK>>
    * person_number : UNIQUE
    * instruments [0..*]
    * siblings [0..*]
    * rented_instrument [0..2]
    ' eller ska jag dela upp det i två?
    * next_of_kin : UNIQUE   <<FK>>
    ' no next of kin, only ice?
    ' next_of_kin == person_id
}
' note top
'     student_id -> should student_id == person_id?
'     What about person_number?
' end note

' ärver från person
entity "ice" {
    --
    ' person_id : <<FK>>???????
    student_id : UNIQUE <<FK>>
    relation : [*..1]
}

entity "sibling" {
    --
    student_id : NOT NULL <<FK>>
    student_id : NOT NULL <<FK>>
}
entity "instructor" {
    * id : UNIQUE <<PK>>
    --
    ' * person_id : UNIQUE     <<FK>>
    * person_number : UNIQUE
}

' INSTRUMENTS
entity "instrument" {
* id : UNIQUE <<PK>>
' rent_id
--
instrument/type : NOT NULL
brand [0..*]
price_per_time_unit : NOT NULL

' or
' __
' instrument/type
' brand
' price_per_time_unit
' in_stock
' rented

}
' ' find a better name. "instrument_skill"? Is it even neccessary??
' entity "instrument" {
'     type
'     level
' }

' is in_stock derived data? If rentee_id than its not in stock?
entity "rented_instrument" {
--
instrument_id : UNIQUE <<FK>>
' rent_id
student_id : NOT NULL
' rentee
start_date : NOT NULL
}

' LESSONS
' ska instructor ligger på denna nivå eller nere hos childs?
entity "lesson" {
    --
    instructor_id <<FK>>
    date : NOT NULL
    start_time : NOT NULL
    end_time : NOT NULL
    price : NOT NULL
}
entity "private_lesson" {
    * id : UNIQUE <<PK>>
    --
    instrument
    level : {beginner, intermediate,advanced}
}

' TODO: Ska level alternativen skrivas som kommentar istället??
entity "group_lesson" {
    * id : UNIQUE <<PK>>
    --
    instrument : NOT NULL
    level : {beginner,intermediate,advanced}
    class_room : NOT NULL
    max_nbr_of_students : NOT NULL
    min_nbr_of_students : NOT NULL
}

entity "group_participants" {
    --
    group_lesson_id : <<FK>>
    registered_students [0..*]
    ' registered_students : student_id[]
}

entity "ensemble" {
    * id : UNIQUE <<PK>>
    --
    instructor_id <<FK>>
    date : NOT NULL
    start_time : NOT NULL
    end_time : NOT NULL
    price : NOT NULL
    genre
    class_room
    max_nbr_of_students
    min_nbr_of_students
}

entity "ensemble_participants" {
    --
    ensemble_lesson_id : UNIQUE <<FK>>
    registered_students [0..*]
}

' FINANCIAL
entity student_payment {
* id : UNIQUE <<PK>>
--
student_id
start_of_period
end_of_period
lessons
rented_instruments
}
' note bottom 
'     What if the bill should include several students? 
' end note
entity "billing_information" {}

entity instructor_payment {
* id : UNIQUE <<PK>>
--
instructor_id
start_of_period
end_of_period
lessons
}
' entity "monthly_statement" {
' }

entity "payout_information" {}


' RELATIONS
person ||--|{ address : livesAt
' person ||--|| student::person_id : isA
' person ||--|| instructor::person_id : isA
' person ||--|| ice::person_id : isA
' student |o"1"--"0..2"o{ rented_instrument : mayRent
student |o--o{ rented_instrument : mayRent
rented_instrument ||--|| instrument 
billing_information ||--|{ student : for
payout_information ||--|| instructor : for


student |o--o{ lesson : mayAttend
student |o--o{ ensemble : mayAttend
lesson }|--|| instructor : taughtBy

student ||--|{ ice : contactPerson
student }|--o{ sibling : mayHaveA

group_lesson ||--|| group_participants : has
ensemble ||--|| ensemble_participants : has
' sibling }|--|{ student : isA
' et |o"1"---"10"o{ et2 : relationtest

' INHERITANCE
' ' rename the x* variants into x1 to see effect
' () "xor\nsubtypes" as x1
' stack "xor" as x_1
' label "xor\nsubtypes" as x__1

' ' super/subtype relations using x1 as intermediate connection
' lesson <|-down- x_1
' x_1 -up- private_lesson
' x_1 -up- group_lesson

lesson <|--down- private_lesson
lesson <|--down- group_lesson
' lesson <|--down- ensemble
person <|--down- student
person <|--down- instructor
person <|--down- ice

' ARRANGEMENT
group_lesson -[hidden]right-> private_lesson
group_lesson -[hidden]down-> group_participants
ensemble -[hidden]down-> ensemble_participants

person -[hidden]up-> student
person -[hidden]up-> ice
person -[hidden]up-> instructor
person -[hidden]left-> address

@enduml